<tool id="geneeval_0.3" name="GeneEval" version="0.3">
  <description>Computes performance measures based on gene labels and predictions</description>
  <command>~/bin/octave_start_script.sh "setup_mgene; gene_eval('$label_format.label_format_param', '$label', '$label.extra_files_path', '$prediction_format.prediction_format_param', '$predictions', '$predictions.extra_files_path', '$genome.extra_files_path', '$performance', '$performance.extra_files_path',$eval_genomewide);"> $Log_File; ~/bin/cleanup_output.sh $Log_File </command>
  <inputs>
    <conditional name="label_format">
    <param name="label_format_param" type="select" label="Label format" help="">
        <option value="GFF3">GFF3 File</option>
	<option value="Anno">Annotation Object</option>
      </param>
    <when value="GFF3">
    <param format="gff3" name="label" type="data" label="Label file in GFF3 format" help="Partial genome annotation in GFF3 format describing the known gene structures for the provided genome."/>
    </when> 
    <when value="Anno">
    <param format="gann" name="label" type="data" label="Labels as Annotation object" help=""/>
    </when> 
    </conditional>
    <conditional name="prediction_format">
    <param name="prediction_format_param" type="select" label="Prediction format" help="">
        <option value="GFF3">GFF3 File</option>
	<option value="Anno">Annotation Object</option>
      </param>
    <when value="GFF3">
    <param format="gff3" name="predictions" type="data" label="Gene Predictions in GFF3 format" help="The prediction file contains gene predictions for genomic sequences and can be generated with the GenePredict tool."/>
    </when> 
    <when value="Anno">
    <param format="gann" name="predictions" type="data" label="Predictions as Annotation object" help=""/>
    </when> 
    </conditional>
    <param format="gio" name="genome" type="data" label="Genome information file" help="Genome information file containing information about the chromosomes/contigs of the genome. It can be created with the GenomeTool."/>
    <param name="eval_genomewide" type="select" label="Option" help="If your annotation is incomplete, the evaluation should only be performed around annotated genes.">
      <option value="1">Consider complete sequence</option>
      <option value="0">Only consider regions around annoted genes</option>
    </param>
  </inputs>
  <outputs>
    <data format="txt" name="performance" label="Prediction Performance Evaluation"/>
    <data format="txt" name="Log_File" label="Log File"/>
  </outputs>
  <help>


**What it does**

This tool compares two gene annotation files, where one is considered
as the "true annotation", e.i. the label file, while the other is
considered as a potential wrong annotation, e.i. the prediction file.
The performance metrices employed are similar to those used in the
EGASP competition [1]: Sensitivity and specifcity are 
determined on the level of nucleotides, exons, transcripts and genes
while considering coding regions only. (See also [2] for more details)

**References** 

[1] Guigo R., J.F. Flicek, P. Abril, A. Reymond, J. Lagarde, F. Denoeud, S. Antonarakis,
M. Ashburner, V.B. Bajic, E. Birney, R. Castelo, E. Eyras, C. Ucla, T.R. Gingeras,
J. Harrow, T. Hubbard, S.E. Lewis, and M.G. Reese. EGASP: The human ENCODE
genome annotation assessment project. Genome Biology, 7(S2), 2006.

[2] Schweikert, G., Zien, A., Zeller, G., Behr, J.,
Dieterich, C., Ong, C., Philips, P., Bona, F. D., Hartmann, L.,
Bohlen, A., Kroeger, N., Sonnenburg, S., and Raetsch, G. (2009)
mGene: Accurate computational gene finding with application to
nematode genomes. Genome Research, under review.


**Input**

* Use two GFF3 files from your current history. You can also upload
  new GFF3 files from your computer using the "Upload file" tool. (If
  you have already converted the GFF3 to a AGS file (Annotation object) with the
  gff2anno tool you can chose those to save time.)

* You also need a Genome Information Object (GIO) that specifies the
  considered genome. It can be created with the "GenomeTool"

* Select wether you whish to evaluate the gene predictions with
  respect to the complete sequence, as specified in the GIO or only
  around the annotated genes from the label file.


**Common Mistakes**

* Note: If your annotation is incomplete on the considered sequence,
  while you computed predictions for the complete sequence, your
  specificity will naturally be low when comparing on the whole
  sequence, as any predicted gene that does not overlap with an
  annotated one is counted as wrong prediction. In this case you
  should chose the option "Only consider regions around annoted genes". 

* If you upload a GFF3 file you need to specify the file format as
  GFF3. If you choose "Auto-detect", the file will be uploaded as GFF
  file and you can't select it as input to the mGeneEval tool.

* Both Annotation files, the label file as well as the prediction file,
  need to be with respect to the sequence specified in the genome information file.





**Output**

This tool generates an extensive accuracy report, stored as a text
file for human inspection. For an ideal prediction that exactly
reproduces the annotation the output should look like this, where
sensitivity is given by the fraction of correctly predicted items
among all labeled items, and the specificity by the fraction of
correctly predicted items among all predicted ones:

level.SN 
level.num_corr/level.num_obsv; 
level.SP =
level.num_corr/level.num_pred;

Evaluation
  on coding nucleotide level:
    sensitivity: 100.00%

    specificity: 100.00%

  on coding exon level:
    sensitivity: 100.00% (missing exons: 0.00%)

    specificity: 100.00% (wrong exons:   0.00%)

  on coding transcript level:
    sensitivity: 100.00% 

    specificity: 100.00% 

  on gene level:
    sensitivity: 100.00%  (missing genes: 0.00%)

    specificity: 100.00%  (wrong genes: 0.00%)
    

  TIS:
    sensitivity: 100.00%
    
    specificity: 100.00%

  STOP:
    sensitivity: 100.00%
    
    specificity: 100.00%



------

.. class:: infomark

**About formats**

**GFF3 format** General Feature Format is a format for describing genes
and other features associated with DNA, RNA and Protein sequences. GFF
lines have nine tab-separated fields:

    1. seqname - Must be a chromosome or scaffold.
    2. source - The program that generated this feature.
    3. feature - The name of this type of feature. Some examples of standard feature types are "CDS", "start_codon", "stop_codon", and "exon".
    4. start - The starting position of the feature in the sequence. The first base is numbered 1.
    5. end - The ending position of the feature (inclusive).
    6. score - A score between 0 and 1000. If there is no score value, enter ".".
    7. strand - Valid entries include '+', '-', or '.' (for don't know/care).
    8. frame - If the feature is a coding exon, frame should be a number between 0-2 that represents the reading frame of the first base. If the feature is not a coding exon, the value should be '.'.
    9. group - All lines with the same group are linked together into a single item.

For more information see http://www.sequenceontology.org/gff3.shtml

**AGS format** Annotation Gene Structure Object is an internal structure that
efficiently stores the information from a GFF3 file. Can be generated
with the GFF2Anno tool. The Anno2GFF converts it back to a GFF3 file.

**GIO format** Genome Information Object is an internal format used to
store relevant information about the considered genome (as extracted
from a FASTA file). Includes for example number and length of
chromosomes/contigs. File is generated by applying the GenomeTool.

</help>
</tool>

