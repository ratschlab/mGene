<tool id="contenttrain_0.3" name="ContentTrain" version="0.3">
  <description>Trains a content predictor using a set of labeled segments</description>
  <command>~/bin/octave_start_script.sh "rmpath('/home/galaxy/mgene_galaxy'); addpath('/home/galaxy/svn/projects/mGene_core/'); paths; content_train('$Content_Labels', '$Content_Labels.extra_files_path', '$content_name', '$Genome_Information.extra_files_path','$Annotation.extra_files_path', '$Trained_Content_Predictor', '$Trained_Content_Predictor.extra_files_path', -1);" >> $Log_File</command>
  <inputs>
    <param format="gio" name="Genome_Information" type="data" label="Genome information file" help="Internal representation of the genomic sequence (eg, chromosomes or contigs) in which to predict signals. The GIO file can be created with 'GenomeTool'."/>
    <param format="gann" name="Annotation" type="data" label="Genome annotation" help="Genome annotation file in AGS format. Can be created with GFF2Anno."/> 
    <param format="cpf" name="Content_Labels" type="data" label="Label file in CPF format" help="The label file contains information about the genomic locations at which a given content type occurs. It can be created with 'Anno2ContentLabel'."/>
    <param name="content_name" type="select" label="Genomic content for which the predictor should be trained" help="Select the content for which a predictor is to be trained. The label file has to contain labeled genomic positions of the selected content type. 'Automatic' will select the content type with the largest number of correspondingly labled genomic segments.">
      <option value="auto">Automatic</option>
      <option value="intergenic">Intergenic</option>
      <option value="utr5exon">5' UTR Exon</option>
      <option value="cds_exon">CDS Exon</option>
      <option value="intron">Intron</option>
      <option value="utr3exon">3' UTR Exon</option>
    </param>
  </inputs>
  <outputs>
    <data format="tcp" name="Trained_Content_Predictor" label="Trained Content Predictor"/>
    <data format="txt" name="Log_File" label="Log File"/>
  </outputs>
  <help>


**What it does**

This tool trains a content predictor using support vector machines
using Spectrum kernels with different degrees. Input is a genome
information file (using the GenomeTool) and labeled genomic segments
(in CPF format generated by the GFF2ContentLabel tool). The output is an
internal data structure that can be used with the ContentPredict tool
in order to perform predictions on segments of genomic sequences.

--------

The training time depends on the number of labeled examples and on the
selected content type. Training will typically take a few minutes.

------

**Output**

The output is an internal data structure (TCP file) that can be used
with 'ContentPredict' in order to perform predictions on genomic
sequences.

--------

**Example**


------

.. class:: infomark

**About formats**


**GIO format** Genome Information Object is an internal format used to
store relevant information about the considered genome (as extracted
from a FASTA file). Includes for example number and length of
chromosomes/contigs. File is generated by applying the GenomeTool.

**AGS format** Annotation Gene Structure Object is an internal structure that
efficiently stores the information from a GFF3 file. Can be generated
with the GFF2Anno tool. The Anno2GFF converts it back to a GFF3 file.

**CPF format** Content Prediction format is similar to the SPF format,
except that it requires exactly an additional field, as it contains
information on segments not on individual positions::

    1. chrom - The name of the chromosome (e.g. chr1, chrY_random).
    2. contentName - possible choices include tss, tis, acc, don, cdsStop, cleave.
    3. scoreName - possible choices include label, output, Conf, Conf_Cum
    4. chromPos1 - The start position of a segment.
    5. chromPos2 - The end position of a segment.
    6. strand - Defines the strand - either '+' or '-'.
    7. score - The score between -infinity and infinity. If scoreName is 'label', then the score should be either -1 or 1.


**TCP format** Trained Content Predictor is an internal structure that contains the trained model for a given content.

</help>
</tool>
